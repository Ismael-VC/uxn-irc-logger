####### CONFIG

SLAVE_NAME = "ql-slave"
SLAVE_PASS = "ql-pass"

WIN_SLAVE_NAME = "ql-win-slave"
WIN_SLAVE_PASS = "ql-pass"

SLAVE_PORT = 9989

WEB_UNAME = "%BB_WEB_UNAME%"
WEB_PSWD = "%BB_WEB_PSWD%"
WEB_PORT = 8010
WEB_URL = "http://quodlibet.duckdns.org:8010/"

IRC_SERVER = "%IRC_SERVER%"
IRC_CHAN = "%IRC_CHAN%"
IRC_NICK = "utahraptor"

QL_BRANCHES = ["default", "quodlibet-3.1", "quodlibet-3.0", "quodlibet-2.6"]
QL_WIN_BRANCHES = ["default", "quodlibet-3.1"]

####### HELPERS

def get_builder(branch):
    assert branch in QL_BRANCHES
    return "builder-" + branch


def get_win_builder(branch):
    assert branch in QL_WIN_BRANCHES
    return "win32-builder-" + branch


def get_all_builders():
    return [get_builder(b) for b in QL_BRANCHES]


def get_all_win_builders():
    return [get_builder(b) for b in QL_WIN_BRANCHES]

####### INIT

c = BuildmasterConfig = {}

####### BUILDSLAVES

from buildbot.buildslave import BuildSlave


c['slaves'] = [BuildSlave(SLAVE_NAME, SLAVE_PASS),
               BuildSlave(WIN_SLAVE_NAME, WIN_SLAVE_PASS)]
c['slavePortnum'] = SLAVE_PORT

####### CHANGESOURCES

from buildbot.changes.hgpoller import HgPoller


c['change_source'] = []

for branch in set(QL_BRANCHES + QL_WIN_BRANCHES):
    poller = HgPoller(
            repourl='https://code.google.com/p/quodlibet/',
            workdir='hgpoller-workdir',
            branch=branch,
            pollinterval=300)

    # http://trac.buildbot.net/ticket/2469
    poller.setName(poller.repourl + poller.branch)

    c['change_source'].append(poller)

####### SCHEDULERS

from buildbot.schedulers.basic import SingleBranchScheduler
from buildbot.schedulers.forcesched import ForceScheduler
from buildbot.changes import filter


c['schedulers'] = []

for branch in QL_BRANCHES:
    c['schedulers'].append(SingleBranchScheduler(
                                name="branch-sched-" + branch,
                                change_filter=filter.ChangeFilter(
                                    branch=branch),
                                treeStableTimer=None,
                                builderNames=[get_builder(branch)]))

for branch in QL_WIN_BRANCHES:
    c['schedulers'].append(SingleBranchScheduler(
                                name="branch-sched-win-" + branch,
                                change_filter=filter.ChangeFilter(
                                    branch=branch),
                                treeStableTimer=None,
                                builderNames=[get_win_builder(branch)]))

c['schedulers'].append(ForceScheduler(
    name="force", builderNames=get_all_builders() + get_all_win_builders()))

####### BUILDERS

from buildbot.process.factory import BuildFactory
from buildbot.steps.source.mercurial import Mercurial
from buildbot.steps.shell import ShellCommand
from buildbot.config import BuilderConfig
from buildbot import locks


build_lock = locks.SlaveLock("slave_builds", maxCount=1)

c['builders'] = []

# linux for all branches

for branch in QL_BRANCHES:
    test_factory = BuildFactory()

    test_factory.addStep(
        Mercurial(
            repourl='https://code.google.com/p/quodlibet/',
            mode='incremental',
            defaultBranch=branch,
            branchType='inrepo',
            haltOnFailure=True
        )
    )

    test_factory.addStep(ShellCommand(
        command=["xvfb-run", "-a", "python", "quodlibet/setup.py", "test"],
        description=["main tests"]))

    # some fail for non obvious reasons on this setup only..
    if branch != "quodlibet-2.6":
        test_factory.addStep(ShellCommand(
            command=["xvfb-run", "-a", "python", "quodlibet/setup.py", "test",
                     "--suite", "plugin"],
            description=["plugin tests"]))

    test_factory.addStep(ShellCommand(
        command=["xvfb-run", "-a", "python", "quodlibet/setup.py", "test",
                 "--suite", "quality"],
        description=["pyflakes/pep8"]))

    test_factory.addStep(ShellCommand(
        command=["python", "quodlibet/setup.py", "bdist"],
        description=["bdist"]))

    test_factory.addStep(ShellCommand(
        command=["make", "-C", "quodlibet/docs"],
        description=["build docs"]))

    c['builders'].append(
        BuilderConfig(name=get_builder(branch),
          slavenames=[SLAVE_NAME],
          factory=test_factory,
          locks=[build_lock.access('counting')]))

# windows on a different slave

build_win_lock = locks.SlaveLock("slave_win_builds", maxCount=1)

for branch in QL_WIN_BRANCHES:
    test_factory = BuildFactory()

    test_factory.addStep(
        Mercurial(
            repourl='https://code.google.com/p/quodlibet/',
            mode='incremental',
            defaultBranch=branch,
            branchType='inrepo',
            haltOnFailure=True
        )
    )

    test_factory.addStep(ShellCommand(
        command=["bash", "win_installer/buildbot_test.sh"],
        description=["main tests"]))

    c['builders'].append(
        BuilderConfig(name=get_win_builder(branch),
          slavenames=[WIN_SLAVE_NAME],
          factory=test_factory,
          locks=[build_win_lock.access('counting')]))

####### STATUS TARGETS

from buildbot.status import html
from buildbot.status.web import authz, auth
from buildbot.status import words


c['status'] = []

authz_cfg = authz.Authz(
    auth=auth.BasicAuth([(WEB_UNAME, WEB_PSWD)]),
    gracefulShutdown = False,
    forceBuild = 'auth',
    forceAllBuilds = 'auth',
    pingBuilder = 'auth',
    stopBuild = 'auth',
    stopAllBuilds = 'auth',
    cancelPendingBuild = 'auth',
)

c['status'].append(html.WebStatus(http_port=WEB_PORT, authz=authz_cfg))

c['status'].append(
    words.IRC(
        host=IRC_SERVER,
        nick=IRC_NICK,
        channels=[IRC_CHAN],
        notify_events={
            'exception': 1,
            'successToFailure': 1,
            'failureToSuccess': 1,
        }
    )
)

####### PROJECT IDENTITY

c['title'] = "Quod Libet"
c['titleURL'] = "http://code.google.com/p/quodlibet"
c['buildbotURL'] = WEB_URL

####### DB URL

c['db'] = {
    'db_url' : "sqlite:///state.sqlite",
}
